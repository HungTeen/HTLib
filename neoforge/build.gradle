import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id("multiplatform-convention")

    alias(libs.plugins.minotaur)
    alias(libs.plugins.curseforgegradle)
    alias(libs.plugins.moddevgradle)
}

version = modVersion
var mcVersion = libs.versions.minecraft.asProvider().get()
base {
    archivesName = "${modName}-neoforge-${mcVersion}"
}

neoForge {
    version = libs.versions.neoforge.asProvider().get()

    accessTransformers.files.setFrom(project(":common").file("src/main/resources/META-INF/accesstransformer-nf.cfg"))

    runs {
        configureEach {
            logLevel = org.slf4j.event.Level.DEBUG
        }

        mods.create("${modId}").sourceSet(project.sourceSets.getByName("main"))

        create("client") {
            client()
        }

        create("server") {
            server()
//            programArgument("--nogui")
        }
    }
}

dependencies {
    implementation(libs.neoforge)
    compileOnly(project(":common"))
}

tasks.named('test').configure {
    //Disable builtin test as we have JUnit enabled in Common
    enabled(false)
}


tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}

tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}

tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

tasks.withType(ProcessResources).configureEach {
    from project(":common").sourceSets.main.resources
}

task apiJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'api'

    include "hungteen/${modId}/api/**"

    // Sources included because of MinecraftForge/ForgeGradle#369
    from project(":common").sourceSets.main.allJava
    from(sourceSets.main.allJava)
    from(sourceSets.main.output)
}

artifacts {
    archives apiJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
        }
    }
}

modrinth {
    token = System.getenv("modrinthKey") ?: "Invalid/No API Token Found"
    projectId = modrinthId
    versionNumber.set(project.version.toString())
    versionName = "NeoForge ${mcVersion}"
    versionType = modVersionType
    uploadFile.set(tasks.named("jar", Jar))
    changelog = rootProject.file("docs/en_us/changelog.md").text
    gameVersions = [mcVersion]
    loaders = ["neoforge"]

    debugMode = true
    //https://github.com/modrinth/minotaur#available-properties
}

tasks.register('publishToCurseForge', TaskPublishCurseForge) {
    group = "publishing"
    apiToken = System.getenv("curseforge.apitoken") ?: "Invalid/No API Token Found"

    var mainFile = upload(curseforgeId, tasks.jar)
    mainFile.releaseType = modVersionType
    mainFile.addModLoader("NeoForge")
    mainFile.addGameVersion(mcVersion)
    mainFile.addJavaVersion("Java 21")
    mainFile.changelog = rootProject.file("docs/en_us/changelog.md").text

    debugMode = true
    //https://github.com/Darkhax/CurseForgeGradle#available-properties
}

tasks.named("publish", DefaultTask).configure {
    finalizedBy("modrinth")
    finalizedBy("publishToCurseForge")
}